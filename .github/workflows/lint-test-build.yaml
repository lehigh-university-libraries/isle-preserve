name: lint-test-build-push
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    paths-ignore:
      - "ci/**/*.yaml"
      - "**/*.md"
      - ".github/workflows/*.yaml"
      - "renovate.json5"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  lint-test-build-push:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: ./drupal/Dockerfile
          verbose: true

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2
        with:
          php-version: 8.3
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        working-directory: codebase

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - run: composer install
        working-directory: codebase

      - run: ./scripts/ci/lint.sh

      - name: Extract branch name as docker tag
        shell: bash
        run: |-
          TAG=$(echo "${GITHUB_REF#refs/heads/}" | sed 's/[^a-zA-Z0-9._-]//g' | awk '{print substr($0, length($0)-120)}')
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        id: extract_tag

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f" # v2
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_OIDC_POOL }}
          create_credentials_file: true
          service_account: ${{ secrets.GSA }}
          token_format: "access_token"

      - uses: "docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772" # v3
        name: "Docker login"
        with:
          registry: "us-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: build-push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: ./drupal
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            us-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/isle/drupal:${{ steps.extract_tag.outputs.tag }}

  deploy-test:
    runs-on: self-hosted
    needs: [lint-test-build-push]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: ./.github/workflows/deploy.yaml
        with:
          url: https://wight.cc.lehigh.edu/_rollout

      - run: ./scripts/ci/test.sh
        env:
          DOMAIN: wight.cc.lehigh.edu

      - if: ${{ always() }}
        run: ./scripts/ci/cleanup.sh

  deploy-stage:
    if: github.ref == 'refs/heads/main'
    needs: [deploy-test]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: ./.github/workflows/deploy.yaml
        with:
          url: https://islandora-stage.lib.lehigh.edu/_rollout

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: [deploy-stage]
    runs-on: self-hosted
    # this gates the job so it needs manual approval
    environment: prod
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - run: echo "Deploying to production" && exit 1

      - uses: ./.github/workflows/deploy.yaml
        with:
          url: https://islandora-prod.lib.lehigh.edu/_rollout
